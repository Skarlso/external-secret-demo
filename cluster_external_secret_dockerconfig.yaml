# DON'T TOUCH IT, THIS WORKS!
apiVersion: external-secrets.io/v1beta1
kind: ClusterExternalSecret
metadata:
  name: replicator-docker-pull-access
spec:
  # The name to be used on the ExternalSecrets
  externalSecretName: "replicator-docker-pull-access-cert-es"

  # This is a basic label selector to select the namespaces to deploy ExternalSecrets to.
  # you can read more about them here https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#resources-that-support-set-based-requirements
  namespaceSelector:
    matchExpressions:
      - key: "kubernetes.io/metadata.name"
        operator: "In"
        values: ["mpas-sample-project", "ocm-system", "mpas-system"]

  # How often the ClusterExternalSecret should reconcile itself
  # This will decide how often to check and make sure that the ExternalSecrets exist in the matching namespaces
  refreshTime: "1m"

  # This is the spec of the ExternalSecrets to be created
  # The content of this was taken from our ExternalSecret example
  externalSecretSpec:
    secretStoreRef:
      name: secret-store-name
      kind: ClusterSecretStore
    target:
      template:
        type: kubernetes.io/dockerconfigjson
        metadata:
          annotations:
            # this will make sure that this pull access is also put into the service account created by the project.
            mpas.ocm.system/secret.dockerconfig: managed
        data:
          .dockerconfigjson: "{{ .mysecret | toString }}"
      name: secret-to-be-created
      creationPolicy: Owner
    data:
    - secretKey:
      remoteRef:
        key: docker-config-example
